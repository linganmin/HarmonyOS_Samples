/*
* Copyright (c) 2024 Huawei Device Co., Ltd.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
* FAQ:如何将类Java语言的线程模型（内存共享）的实现方式转换成在ArkTS的线程模型下（内存隔离）的实现方式
 */

// [Start Task1]
class Task {
  static run(args) {
    // Do some independent tasks
  }
}
let thread = new Thread(() => {
  let result = Task.run(args)
  // deal with result
})
// [End Task1]

// [Start Task2]
class Material {
  action(args) {
    // Do some independent tasks
  }
}
let material = new Material()
let thread = new Thread(() => {
  let result = material.action(args)
  // deal with result
})
// [End Task2]

// [Start Task3]
class Task {
    run(args) {
        // deal with result
        runOnUiThread(() => {
            UpdateUI(result)
        })
    }
}
let task = new Task()
let thread = new Thread(() => {
    let result = task.run(args)
    // Processing results
})
// [End Task3]

// [Start Task4]
class SdkU3d {
    static getInst() {
        return SdkMgr.getInst();
    }
    getPropStr(str: string) {
        return xx;
    }
}
let thread = new Thread(() => {
    // In the game thread
    let sdk = SdkU3d.getInst()
    let ret = sdk.getPropStr("xx")
})
// [End Task4]