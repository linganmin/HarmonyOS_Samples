/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { router } from '@kit.ArkUI';
import { hilog } from '@kit.PerformanceAnalysisKit';

@Entry
@Component
struct Index {
  build() {
    Column({ space: 20 }) {
      Button("Requesting Frame Rates for Animations")
        .id("AnimationFpsRequest")
        .fontSize(16)
        .fontWeight(500)
        .margin({ top: 200, left: 6 })
        .onClick((): void => {
          this.getUIContext().getRouter().pushUrl({
            url: 'DispalySync/PropertyAnimationDisplaySync'
          }, router.RouterMode.Standard, (err) => {
            if (err) {
              hilog.error(0x0001, "router.pushUrl",
                "Invoke replaceUrl failed, code is %{public}s, message is %{public}s",
                err.code, err.message);
              return;
            }
            hilog.info(0x0002, "router.pushUrl", "Invoke replaceUrl succeeded.");
          });
        })
        .width('80%')
        .height(40)


      Button('Requesting Frame Rates for UI Components')
        .id('UiFpsRequest')
        .fontSize(16)
        .fontWeight(500)
        .margin({ top: 20, left: 6 })
        .onClick((): void => {
          this.getUIContext().getRouter().pushUrl({
            url: 'DispalySync/CustomDrawDisplaySync'
          }, router.RouterMode.Standard, (err) => {
            if (err) {
              hilog.error(0x0001, "router.pushUrl",
                "Invoke replaceUrl failed, code is %{public}s, message is %{public}s.",
                err.code, err.message);
              return;
            }
            hilog.info(0x0002, "router.pushUrl", "Invoke replaceUrl succeeded.");
          });
        })
        .width('80%')
        .height(40)

      Button('Requesting Frame Rates for Custom Content')
        .id('XComponent')
        .fontSize(16)
        .fontWeight(500)
        .margin({ top: 20, left: 6 })
        .onClick((): void => {
          this.getUIContext().getRouter().pushUrl({
            url: 'DispalySync/XComponentDisplaySync'
          }, router.RouterMode.Single, (err) => {
            if (err) {
              hilog.error(0x0001, "router.pushUrl",
                "Invoke replaceUrl failed, code is %{public}s, message is %{public}s.",
                err.code, err.message);
              return;
            }
            hilog.info(0x0002, "router.pushUrl", "Invoke replaceUrl succeeded.");
          });
        })
        .width('80%')
        .height(40)
    }
    .width('100%')
  }
}