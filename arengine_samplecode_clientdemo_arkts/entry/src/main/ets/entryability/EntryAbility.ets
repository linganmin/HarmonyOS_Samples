/*
 * Copyright (c) 2024-2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { window } from '@kit.ArkUI';
import { ConfigurationConstant, UIAbility } from '@kit.AbilityKit';
import { Logger } from '../utils/Logger';

export default class EntryAbility extends UIAbility {
  onCreate(): void {
    this.context.getApplicationContext().setColorMode(ConfigurationConstant.ColorMode.COLOR_MODE_NOT_SET);
    Logger.info('Ability onCreate.');
  }

  onDestroy(): void {
    Logger.info('Ability onDestroy.');
  }

  onWindowStageCreate(windowStage: window.WindowStage): void {
    // Main window is created, set main page for this ability
    Logger.info('Ability onWindowStageCreate.');

    windowStage.loadContent('pages/Selector', (err) => {
      if (err.code) {
        Logger.error(`Failed to load the content. Code: ${err.code}, message: ${err.message}.`);
        return;
      }
      Logger.info('Succeeded in loading the content.');
    })
  }

  onWindowStageDestroy(): void {
    // Main window is destroyed, release UI related resources
    Logger.info('Ability onWindowStageDestroy.');
  }

  onForeground(): void {
    // Ability has brought to foreground
    Logger.info('Ability onForeground.');
  }

  onBackground(): void {
    // Ability has back to background
    Logger.info('Ability onBackground.');
  }
}