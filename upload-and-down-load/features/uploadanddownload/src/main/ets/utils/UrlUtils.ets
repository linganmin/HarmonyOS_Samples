/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { common } from '@kit.AbilityKit';
import { preferences } from '@kit.ArkData';
import { logger } from './Logger';
import { BusinessError } from '@kit.BasicServicesKit';

const TAG: string = 'UrlUtils';
const URL_KEY: string = 'url';
const STORE_NAME: string = 'server_url';

class UrlUtil {
  async getUrl(context: common.UIAbilityContext): Promise<string> {
    let url = '';
    try {
      let preference = await preferences.getPreferences(context, STORE_NAME);
      url = await preference.get(URL_KEY, '') as string;
      logger.info(TAG, `getUrl,url= ${url}`);
    } catch (error) {
      let err = error as BusinessError;
      logger.info(TAG, `getUrl failed, error code=${err.code}, message=${err.message}`);
    }
    return url;
  }

  async saveUrl(context: common.UIAbilityContext, url: string) {
    try {
      let preference = await preferences.getPreferences(context, STORE_NAME);
      await preference.put(URL_KEY, url);
      await preference.flush();
    } catch (error) {
      let err = error as BusinessError;
      logger.info(TAG, `saveUrl failed, error code=${err.code}, message=${err.message}`);
    }
  }
}

export const urlUtils = new UrlUtil();
